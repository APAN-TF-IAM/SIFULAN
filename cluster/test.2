# /bin/bash
#
# test.2 is a control: server

echo
# Setup the Cluster Account
useradd ifirexman
mkdir -p /home/ifirexman/.ssh
chown ifirexman.ifirexman /home/ifirexman/.ssh
chmod 0700 /home/ifirexman/.ssh

# Authorize the manger's key
cat <<EOT >> /home/ifirexman/.ssh/authorized_keys
ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBKnlrpDKOyGuKgBuSEEmSMDyObh4vkkBB90gYvB9BX4UNewkIawT7T8m9DDBlAjs2bkfrYFH9uzFIQYZCWzy1o4= ifirexman@mines.ihs
EOT
chown ifirexman.ifirexman /home/ifirexman/.ssh/authorized_keys
chmod 0700 /home/ifirexman/.ssh/authorized_keys

# Setup Docker Engine
yum remove -y docker docker-client docker-client-latest docker-common docker-latest docker-latest-logrotate docker-logrotate docker-engine
yum install -y yum-utils
yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
yum install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin
systemctl start docker && systemctl enable docker
systemctl start containerd && systemctl enable containerd
usermod -aG docker ifirexman

# Disable swap
sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
swapoff -a

# Disable Firewall
systemctl stop firewalld
systemctl disable firewalld

# Modify bridge adapter settings
modprobe br_netfilter
cat <<EOT > /etc/sysctl.d/kubernetes.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
net.ipv4.ip_forward = 1
EOT

# Disable Extra NetworkManager Config
systemctl disable nm-cloud-setup.service nm-cloud-setup.timer
echo
echo 'Time to reboot test.2'
echo 'Once rebooted server test.2 will be prepared to join the cluster'
